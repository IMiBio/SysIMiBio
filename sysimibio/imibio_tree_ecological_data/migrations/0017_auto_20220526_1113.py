# Generated by Django 3.2 on 2022-05-26 14:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sysimibio.imibio_tree_ecological_data.validators


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("imibio_tree_ecological_data", "0016_treemeasurement"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="tree",
            name="dab",
        ),
        migrations.RemoveField(
            model_name="tree",
            name="dap",
        ),
        migrations.RemoveField(
            model_name="tree",
            name="phytosanitary_status",
        ),
        migrations.RemoveField(
            model_name="tree",
            name="picture",
        ),
        migrations.RemoveField(
            model_name="tree",
            name="sociological_classification",
        ),
        migrations.RemoveField(
            model_name="tree",
            name="tree_height",
        ),
        migrations.RemoveField(
            model_name="treemeasurement",
            name="field",
        ),
        migrations.AddField(
            model_name="permanentparcel",
            name="cadastral_parcel",
            field=models.CharField(
                default="1668002000,000000012",
                help_text='En caso de estar en dos parcelas catastrales separar con coma las nomenclaturas catastrales de cada parcela.Ejemplo : "16680020,00000000012 "<br/><strong>Referente a la parcela catastral de donde la parcela de investigación está ubicada.</strong>    Verificar en <a href="http://ide.ordenamientoterritorial.misiones.gob.ar/index.php?option=com_content&view=article&id=8&Itemid=3"> GeoMisiones (IDE Misiones)</a>, capa "Parcelario Misiones',
                max_length=50,
                verbose_name="Nomenclatura catastral",
            ),
        ),
        migrations.AddField(
            model_name="permanentparcel",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, null=True, verbose_name="Fecha creación"
            ),
        ),
        migrations.AddField(
            model_name="permanentparcel",
            name="plot_type",
            field=models.CharField(
                default="Fiscal", max_length=10, verbose_name="Tipo de parcela"
            ),
        ),
        migrations.AddField(
            model_name="tree",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, null=True, verbose_name="Fecha creación"
            ),
        ),
        migrations.AddField(
            model_name="tree",
            name="has_herbarium",
            field=models.BooleanField(
                default=False, verbose_name="Tiene material en herbario?"
            ),
        ),
        migrations.AddField(
            model_name="tree",
            name="herbarium_info",
            field=models.TextField(
                blank=True, verbose_name="Numero del material de herbario"
            ),
        ),
        migrations.AddField(
            model_name="treemeasurement",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, null=True, verbose_name="Fecha creación"
            ),
        ),
        migrations.AddField(
            model_name="treemeasurement",
            name="liana_cover",
            field=models.IntegerField(
                choices=[
                    (1, "Solo en fuste"),
                    (2, "Fueste y copa menor al 50%"),
                    (3, "Fuste y copa mayor al 50%"),
                ],
                default=1,
                verbose_name="Cobertura de lianas",
            ),
        ),
        migrations.AlterField(
            model_name="permanentparcel",
            name="coordinator",
            field=models.ForeignKey(
                max_length=100,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Responsable",
            ),
        ),
        migrations.AlterField(
            model_name="permanentparcel",
            name="locality",
            field=models.CharField(max_length=50, verbose_name="lugar"),
        ),
        migrations.AlterField(
            model_name="tree",
            name="field",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="imibio_tree_ecological_data.fieldwork",
                verbose_name="Campo",
            ),
        ),
        migrations.AlterField(
            model_name="tree",
            name="latitude",
            field=models.FloatField(
                help_text="Informar la distancia en el y (N-S) en metros",
                validators=[
                    sysimibio.imibio_tree_ecological_data.validators.validate_dist_y
                ],
                verbose_name="Eje Y",
            ),
        ),
        migrations.AlterField(
            model_name="tree",
            name="longitude",
            field=models.FloatField(
                help_text="Informar la distancia en el eje x (E-O) en metros.",
                validators=[
                    sysimibio.imibio_tree_ecological_data.validators.validate_dist_x
                ],
                verbose_name="Eje X",
            ),
        ),
        migrations.AlterField(
            model_name="treemeasurement",
            name="dab",
            field=models.FloatField(blank=True, help_text="cm", verbose_name="DAB"),
        ),
        migrations.AlterField(
            model_name="treemeasurement",
            name="dap",
            field=models.FloatField(
                help_text="cm",
                validators=[
                    sysimibio.imibio_tree_ecological_data.validators.tree_dap_validation
                ],
                verbose_name="DAP",
            ),
        ),
        migrations.AlterField(
            model_name="treemeasurement",
            name="phytosanitary_status",
            field=models.IntegerField(
                choices=[(1, "Bueno"), (2, "Regular"), (3, "Malo")],
                default=1,
                verbose_name="Estado fitosanitario",
            ),
        ),
        migrations.AlterField(
            model_name="treemeasurement",
            name="sociological_classification",
            field=models.IntegerField(
                choices=[
                    (1, "Predominante"),
                    (2, "Dominante"),
                    (3, "Codominante"),
                    (4, "Dominada"),
                    (5, "Superior Sumergido"),
                ],
                default=1,
                verbose_name="Clasificación sociologica",
            ),
        ),
        migrations.AlterField(
            model_name="treemeasurement",
            name="tree_height",
            field=models.FloatField(
                blank=True,
                help_text="m",
                validators=[
                    sysimibio.imibio_tree_ecological_data.validators.tree_height_validation
                ],
                verbose_name="Altura del árbol",
            ),
        ),
    ]
